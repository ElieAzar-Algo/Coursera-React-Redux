[{"/home/elie/Desktop/Coursera Courses/Coursera-React-Redux/confusion/src/App.js":"1","/home/elie/Desktop/Coursera Courses/Coursera-React-Redux/confusion/src/reportWebVitals.js":"2","/home/elie/Desktop/Coursera Courses/Coursera-React-Redux/confusion/src/index.js":"3","/home/elie/Desktop/Coursera Courses/Coursera-React-Redux/confusion/src/components/MenuComponent.js":"4","/home/elie/Desktop/Coursera Courses/Coursera-React-Redux/confusion/src/shared/dishes.js":"5","/home/elie/Desktop/Coursera Courses/Coursera-React-Redux/confusion/src/components/DishdetailComponent.js":"6","/home/elie/Desktop/Coursera Courses/Coursera-React-Redux/confusion/src/components/MainComponent.js":"7","/home/elie/Desktop/Coursera Courses/Coursera-React-Redux/confusion/src/components/FooterComponent.js":"8","/home/elie/Desktop/Coursera Courses/Coursera-React-Redux/confusion/src/components/HeaderComponent.js":"9","/home/elie/Desktop/Coursera Courses/Coursera-React-Redux/confusion/src/shared/promotions.js":"10","/home/elie/Desktop/Coursera Courses/Coursera-React-Redux/confusion/src/components/HomeComponent.js":"11","/home/elie/Desktop/Coursera Courses/Coursera-React-Redux/confusion/src/shared/comments.js":"12","/home/elie/Desktop/Coursera Courses/Coursera-React-Redux/confusion/src/components/ContactComponent.js":"13","/home/elie/Desktop/Coursera Courses/Coursera-React-Redux/confusion/src/components/AboutComponent.js":"14","/home/elie/Desktop/Coursera Courses/Coursera-React-Redux/confusion/src/shared/leaders.js":"15","/home/elie/Desktop/Coursera Courses/Coursera-React-Redux/confusion/src/redux/configureStore.js":"16","/home/elie/Desktop/Coursera Courses/Coursera-React-Redux/confusion/src/redux/reducer.js":"17"},{"size":357,"mtime":1606956345068,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":1606620316534,"results":"20","hashOfConfig":"19"},{"size":639,"mtime":1606952695528,"results":"21","hashOfConfig":"19"},{"size":1492,"mtime":1607126429798,"results":"22","hashOfConfig":"19"},{"size":1448,"mtime":1606960076498,"results":"23","hashOfConfig":"19"},{"size":7090,"mtime":1607471888266,"results":"24","hashOfConfig":"19"},{"size":1949,"mtime":1607445206808,"results":"25","hashOfConfig":"19"},{"size":2593,"mtime":1606956778372,"results":"26","hashOfConfig":"19"},{"size":4958,"mtime":1607458675318,"results":"27","hashOfConfig":"19"},{"size":435,"mtime":1606960113766,"results":"28","hashOfConfig":"19"},{"size":1082,"mtime":1606960544429,"results":"29","hashOfConfig":"19"},{"size":4117,"mtime":1606960153538,"results":"30","hashOfConfig":"19"},{"size":10590,"mtime":1607456418043,"results":"31","hashOfConfig":"19"},{"size":4165,"mtime":1607132059564,"results":"32","hashOfConfig":"19"},{"size":2345,"mtime":1606960134506,"results":"33","hashOfConfig":"19"},{"size":258,"mtime":1607444523728,"results":"34","hashOfConfig":"19"},{"size":393,"mtime":1607444273978,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"6lzqq2",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"41"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/elie/Desktop/Coursera Courses/Coursera-React-Redux/confusion/src/App.js",[],["76","77"],"/home/elie/Desktop/Coursera Courses/Coursera-React-Redux/confusion/src/reportWebVitals.js",[],["78","79"],"/home/elie/Desktop/Coursera Courses/Coursera-React-Redux/confusion/src/index.js",[],["80","81"],"/home/elie/Desktop/Coursera Courses/Coursera-React-Redux/confusion/src/components/MenuComponent.js",[],"/home/elie/Desktop/Coursera Courses/Coursera-React-Redux/confusion/src/shared/dishes.js",[],["82","83"],"/home/elie/Desktop/Coursera Courses/Coursera-React-Redux/confusion/src/components/DishdetailComponent.js",["84","85","86","87"],"/home/elie/Desktop/Coursera Courses/Coursera-React-Redux/confusion/src/components/MainComponent.js",["88"],"import React, { Component } from 'react';\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux';\n\nimport Home from './HomeComponent';\nimport Menu from './MenuComponent';\nimport DishDetail from './DishdetailComponent';\n\nimport Header from './HeaderComponent';\nimport Footer from './FooterComponent';\nimport Contact from './ContactComponent';\nimport About from  './AboutComponent'\n  \nconst mapStateToProps = props => {\n  return {\n    dishes: props.dishes,\n    comments: props.comments,\n    promotions: props.promotions,\n    leaders: props.leaders\n  }\n}\n\nclass Main extends Component {\n\n  constructor(props) {\n    super(props);\n\n   \n  }\n  \n  render() {\n    const HomePage = () => {\n      return(\n          <Home \n          dish={this.props.dishes.filter((dish) => dish.featured)[0]}\n          promotion={this.props.promotions.filter((promo) => promo.featured)[0]}\n          leader={this.props.leaders.filter((leader) => leader.featured)[0]}\n          />\n      );\n    }\n    const DishWithId = ({match}) => {\n      return(\n          <DishDetail dish={this.props.dishes.filter((dish) => dish.id === parseInt(match.params.dishId,10))[0]} \n            comments={this.props.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId,10))} />\n      );\n    };\n    return (\n      <div>\n        <Header />\n        <Switch>\n              <Route path='/home' component={HomePage} />\n              <Route exact path='/menu' component={() => <Menu dishes={this.props.dishes} />} />\n              <Route path='/menu/:dishId' component={DishWithId} />\n              <Route exact path='/contactus' component={Contact}  />\n              <Route exact path='/aboutus' component={()=> <About leaders={this.props.leaders}/>}  />\n              <Redirect to=\"/home\" />\n          </Switch>\n\n        \n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(connect(mapStateToProps)(Main)); ","/home/elie/Desktop/Coursera Courses/Coursera-React-Redux/confusion/src/components/FooterComponent.js",[],"/home/elie/Desktop/Coursera Courses/Coursera-React-Redux/confusion/src/components/HeaderComponent.js",[],"/home/elie/Desktop/Coursera Courses/Coursera-React-Redux/confusion/src/shared/promotions.js",[],"/home/elie/Desktop/Coursera Courses/Coursera-React-Redux/confusion/src/components/HomeComponent.js",[],"/home/elie/Desktop/Coursera Courses/Coursera-React-Redux/confusion/src/shared/comments.js",[],"/home/elie/Desktop/Coursera Courses/Coursera-React-Redux/confusion/src/components/ContactComponent.js",["89","90","91","92","93","94","95","96"],"import React, { Component } from 'react';\nimport { Breadcrumb, BreadcrumbItem,\n    Button, Row, Col, Label } from 'reactstrap';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\nimport { Link } from 'react-router-dom';\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\nconst minLength = (len) => (val) => val && (val.length >= len);\nconst isNumber = (val) => !isNaN(Number(val));\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\nclass Contact extends Component {\n    constructor(props) {\n        super(props);\n\n       \n        \n        this.handleSubmit = this.handleSubmit.bind(this);\n        \n    }\n    \n    handleSubmit(values) {\n        console.log('Current State is: ' + JSON.stringify(values));\n        alert('Current State is: ' + JSON.stringify(values));\n        // event.preventDefault();\n    }\n\n    render (){\n        \n    return(\n        <div className=\"container\">\n             <div className=\"row\">\n                <Breadcrumb>\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                    <BreadcrumbItem active>Contact Us</BreadcrumbItem>\n                </Breadcrumb>\n                <div className=\"col-12\">\n                    <h3>Contact Us</h3>\n                    <hr />\n                </div>                \n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12\">\n                <h3>Location Information</h3>\n                </div>\n                <div className=\"col-12 col-sm-4 offset-sm-1\">\n                        <h5>Our Address</h5>\n                        <address>\n                        121, Clear Water Bay Road<br />\n                        Clear Water Bay, Kowloon<br />\n                        HONG KONG<br />\n                        <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\n                        <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\n                        <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\n                        </address>\n                        </div>\n                <div className=\"col-12 col-sm-6 offset-sm-1\">\n                    <h5>Map of our Location</h5>\n                </div>\n                <div className=\"col-12 col-sm-11 offset-sm-1\">\n                    <div className=\"btn-group\" role=\"group\">\n                        <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\n                        <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\n                        <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"row row-content\">\n                   <div className=\"col-12\">\n                      <h3>Send us your Feedback</h3>\n                   </div>\n                    <div className=\"col-12 col-md-9\">\n                    <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\n                    <Row className=\"form-group\">\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\n                                        placeholder=\"First Name\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\n                                        }}\n                                         />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".firstname\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be greater than 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}\n                                     />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\n                                        placeholder=\"Last Name\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\n                                        }}\n                                         />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".lastname\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be greater than 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}\n                                     />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\n                                        placeholder=\"Tel. Number\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, minLength: minLength(3), maxLength: maxLength(15), isNumber\n                                        }}\n                                         />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".telnum\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be greater than 2 numbers',\n                                            maxLength: 'Must be 15 numbers or less',\n                                            isNumber: 'Must be a number'\n                                        }}\n                                     />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\n                                        placeholder=\"Email\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, validEmail\n                                        }}\n                                         />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".email\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            validEmail: 'Invalid Email Address'\n                                        }}\n                                     />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{size: 6, offset: 2}}>\n                                    <div className=\"form-check\">\n                                        <Label check>\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\n                                                className=\"form-check-input\"\n                                                 /> {' '}\n                                                <strong>May we contact you?</strong>\n                                        </Label>\n                                    </div>\n                                </Col>\n                                <Col md={{size: 3, offset: 1}}>\n                                    <Control.select model=\".contactType\" name=\"contactType\"\n                                        className=\"form-control\">\n                                        <option>Tel.</option>\n                                        <option>Email</option>\n                                    </Control.select>\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\n                                <Col md={10}>\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\n                                        rows=\"12\"\n                                        className=\"form-control\" />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{size:10, offset: 2}}>\n                                    <Button type=\"submit\" color=\"primary\">\n                                    Send Feedback\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </LocalForm>\n                    </div>\n               </div>\n        </div>\n    );\n}}\n\nexport default Contact;","/home/elie/Desktop/Coursera Courses/Coursera-React-Redux/confusion/src/components/AboutComponent.js",[],"/home/elie/Desktop/Coursera Courses/Coursera-React-Redux/confusion/src/shared/leaders.js",[],"/home/elie/Desktop/Coursera Courses/Coursera-React-Redux/confusion/src/redux/configureStore.js",[],"/home/elie/Desktop/Coursera Courses/Coursera-React-Redux/confusion/src/redux/reducer.js",[],{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"97","replacedBy":"101"},{"ruleId":"99","replacedBy":"102"},{"ruleId":"97","replacedBy":"103"},{"ruleId":"99","replacedBy":"104"},{"ruleId":"97","replacedBy":"105"},{"ruleId":"99","replacedBy":"106"},{"ruleId":"107","severity":1,"message":"108","line":46,"column":37,"nodeType":"109","endLine":48,"endColumn":66},{"ruleId":"110","severity":1,"message":"111","line":47,"column":51,"nodeType":"112","messageId":"113","endLine":47,"endColumn":52},{"ruleId":"107","severity":1,"message":"114","line":61,"column":37,"nodeType":"109","endLine":67,"endColumn":44},{"ruleId":"107","severity":1,"message":"115","line":83,"column":37,"nodeType":"109","endLine":83,"endColumn":135},{"ruleId":"116","severity":1,"message":"117","line":25,"column":3,"nodeType":"118","messageId":"119","endLine":29,"endColumn":4},{"ruleId":"120","severity":1,"message":"121","line":64,"column":25,"nodeType":"109","endLine":64,"endColumn":67},{"ruleId":"107","severity":1,"message":"114","line":78,"column":37,"nodeType":"109","endLine":84,"endColumn":44},{"ruleId":"107","severity":1,"message":"114","line":100,"column":37,"nodeType":"109","endLine":106,"endColumn":44},{"ruleId":"107","severity":1,"message":"114","line":122,"column":37,"nodeType":"109","endLine":128,"endColumn":44},{"ruleId":"107","severity":1,"message":"114","line":145,"column":37,"nodeType":"109","endLine":151,"endColumn":44},{"ruleId":"107","severity":1,"message":"122","line":167,"column":45,"nodeType":"109","endLine":169,"endColumn":52},{"ruleId":"107","severity":1,"message":"108","line":175,"column":37,"nodeType":"109","endLine":176,"endColumn":66},{"ruleId":"107","severity":1,"message":"115","line":185,"column":37,"nodeType":"109","endLine":187,"endColumn":68},"no-native-reassign",["123"],"no-negated-in-lhs",["124"],["123"],["124"],["123"],["124"],["123"],["124"],"react/jsx-pascal-case","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE","no-global-assign","no-unsafe-negation"]