[{"/home/elie/Desktop/Coursera Courses/Coursera-React-Redux/confusion/src/App.js":"1","/home/elie/Desktop/Coursera Courses/Coursera-React-Redux/confusion/src/reportWebVitals.js":"2","/home/elie/Desktop/Coursera Courses/Coursera-React-Redux/confusion/src/index.js":"3","/home/elie/Desktop/Coursera Courses/Coursera-React-Redux/confusion/src/components/MenuComponent.js":"4","/home/elie/Desktop/Coursera Courses/Coursera-React-Redux/confusion/src/shared/dishes.js":"5","/home/elie/Desktop/Coursera Courses/Coursera-React-Redux/confusion/src/components/DishdetailComponent.js":"6","/home/elie/Desktop/Coursera Courses/Coursera-React-Redux/confusion/src/components/MainComponent.js":"7","/home/elie/Desktop/Coursera Courses/Coursera-React-Redux/confusion/src/components/FooterComponent.js":"8","/home/elie/Desktop/Coursera Courses/Coursera-React-Redux/confusion/src/components/HeaderComponent.js":"9","/home/elie/Desktop/Coursera Courses/Coursera-React-Redux/confusion/src/shared/promotions.js":"10","/home/elie/Desktop/Coursera Courses/Coursera-React-Redux/confusion/src/components/HomeComponent.js":"11","/home/elie/Desktop/Coursera Courses/Coursera-React-Redux/confusion/src/shared/comments.js":"12","/home/elie/Desktop/Coursera Courses/Coursera-React-Redux/confusion/src/components/ContactComponent.js":"13","/home/elie/Desktop/Coursera Courses/Coursera-React-Redux/confusion/src/components/AboutComponent.js":"14","/home/elie/Desktop/Coursera Courses/Coursera-React-Redux/confusion/src/shared/leaders.js":"15","/home/elie/Desktop/Coursera Courses/Coursera-React-Redux/confusion/src/redux/configureStore.js":"16","/home/elie/Desktop/Coursera Courses/Coursera-React-Redux/confusion/src/redux/reducer.js":"17"},{"size":357,"mtime":1606956345068,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":1606620316534,"results":"20","hashOfConfig":"19"},{"size":639,"mtime":1606952695528,"results":"21","hashOfConfig":"19"},{"size":1492,"mtime":1607126429798,"results":"22","hashOfConfig":"19"},{"size":1448,"mtime":1606960076498,"results":"23","hashOfConfig":"19"},{"size":2714,"mtime":1607126003431,"results":"24","hashOfConfig":"19"},{"size":1999,"mtime":1607129891749,"results":"25","hashOfConfig":"19"},{"size":2593,"mtime":1606956778372,"results":"26","hashOfConfig":"19"},{"size":4943,"mtime":1607390887734,"results":"27","hashOfConfig":"19"},{"size":435,"mtime":1606960113766,"results":"28","hashOfConfig":"19"},{"size":1082,"mtime":1606960544429,"results":"29","hashOfConfig":"19"},{"size":4117,"mtime":1606960153538,"results":"30","hashOfConfig":"19"},{"size":10648,"mtime":1607192515450,"results":"31","hashOfConfig":"19"},{"size":4165,"mtime":1607132059564,"results":"32","hashOfConfig":"19"},{"size":2345,"mtime":1606960134506,"results":"33","hashOfConfig":"19"},{"size":258,"mtime":1607444523728,"results":"34","hashOfConfig":"19"},{"size":393,"mtime":1607444273978,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"6lzqq2",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"49"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/elie/Desktop/Coursera Courses/Coursera-React-Redux/confusion/src/App.js",[],["77","78"],"/home/elie/Desktop/Coursera Courses/Coursera-React-Redux/confusion/src/reportWebVitals.js",[],["79","80"],"/home/elie/Desktop/Coursera Courses/Coursera-React-Redux/confusion/src/index.js",[],"/home/elie/Desktop/Coursera Courses/Coursera-React-Redux/confusion/src/components/MenuComponent.js",[],["81","82"],"/home/elie/Desktop/Coursera Courses/Coursera-React-Redux/confusion/src/shared/dishes.js",[],["83","84"],"/home/elie/Desktop/Coursera Courses/Coursera-React-Redux/confusion/src/components/DishdetailComponent.js",["85"],"/home/elie/Desktop/Coursera Courses/Coursera-React-Redux/confusion/src/components/MainComponent.js",[],"/home/elie/Desktop/Coursera Courses/Coursera-React-Redux/confusion/src/components/FooterComponent.js",[],"/home/elie/Desktop/Coursera Courses/Coursera-React-Redux/confusion/src/components/HeaderComponent.js",[],"/home/elie/Desktop/Coursera Courses/Coursera-React-Redux/confusion/src/shared/promotions.js",[],["86","87"],"/home/elie/Desktop/Coursera Courses/Coursera-React-Redux/confusion/src/components/HomeComponent.js",[],"/home/elie/Desktop/Coursera Courses/Coursera-React-Redux/confusion/src/shared/comments.js",[],"/home/elie/Desktop/Coursera Courses/Coursera-React-Redux/confusion/src/components/ContactComponent.js",["88","89"],"import React, { Component } from 'react';\nimport { Breadcrumb, BreadcrumbItem,\n            Button, Form, FormGroup, Label, Input, Col, Row, FormFeedback } from 'reactstrap';\nimport { Link } from 'react-router-dom';\n\nclass Contact extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            firstname: '',\n            lastname: '',\n            telnum: '',\n            email: '',\n            agree: false,\n            contactType: 'Tel.',\n            message: '',\n            touched: {\n                firstname: false,\n                lastname: false,\n                telnum: false,\n                email: false\n            }\n        };\n\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleBlur = this.handleBlur.bind(this);\n        \n    }\n    \n    handleBlur = (field) => (evt) => {\n        this.setState({\n            touched: { ...this.state.touched, [field]: true }\n        });\n    }\n\n    \n    validate(firstname, lastname, telnum, email) {\n        const errors = {\n            firstname: '',\n            lastname: '',\n            telnum: '',\n            email: ''\n        };\n\n        if (this.state.touched.firstname && firstname.length < 3)\n            errors.firstname = 'First Name should be >= 3 characters';\n        else if (this.state.touched.firstname && firstname.length > 10)\n            errors.firstname = 'First Name should be <= 10 characters';\n\n        if (this.state.touched.lastname && lastname.length < 3)\n            errors.lastname = 'Last Name should be >= 3 characters';\n        else if (this.state.touched.lastname && lastname.length > 10)\n            errors.lastname = 'Last Name should be <= 10 characters';\n\n        const reg = /^\\d+$/;\n        if (this.state.touched.telnum && !reg.test(telnum))\n            errors.telnum = 'Tel. Number should contain only numbers';\n\n        if(this.state.touched.email && email.split('').filter(x => x === '@').length !== 1)\n            errors.email = 'Email should contain a @';\n            return errors;\n        }\n\n    handleInputChange(event) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n    \n        this.setState({\n          [name]: value\n        });\n    }\n\n    handleSubmit(event) {\n        console.log('Current State is: ' + JSON.stringify(this.state));\n        alert('Current State is: ' + JSON.stringify(this.state));\n        event.preventDefault();\n    }\n\n    render (){\n        const errors = this.validate(this.state.firstname, this.state.lastname, this.state.telnum, this.state.email);\n    return(\n        <div className=\"container\">\n             <div className=\"row\">\n                <Breadcrumb>\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                    <BreadcrumbItem active>Contact Us</BreadcrumbItem>\n                </Breadcrumb>\n                <div className=\"col-12\">\n                    <h3>Contact Us</h3>\n                    <hr />\n                </div>                \n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12\">\n                <h3>Location Information</h3>\n                </div>\n                <div className=\"col-12 col-sm-4 offset-sm-1\">\n                        <h5>Our Address</h5>\n                        <address>\n                        121, Clear Water Bay Road<br />\n                        Clear Water Bay, Kowloon<br />\n                        HONG KONG<br />\n                        <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\n                        <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\n                        <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\n                        </address>\n                        </div>\n                <div className=\"col-12 col-sm-6 offset-sm-1\">\n                    <h5>Map of our Location</h5>\n                </div>\n                <div className=\"col-12 col-sm-11 offset-sm-1\">\n                    <div className=\"btn-group\" role=\"group\">\n                        <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\n                        <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\n                        <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"row row-content\">\n                   <div className=\"col-12\">\n                      <h3>Send us your Feedback</h3>\n                   </div>\n                    <div className=\"col-12 col-md-9\">\n                        <Form onSubmit={this.handleSubmit}>\n                            <FormGroup row>\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\n                                <Col md={10}>\n                                <Input type=\"text\" id=\"firstname\" name=\"firstname\"\n                                        placeholder=\"First Name\"\n                                        value={this.state.firstname}\n                                        valid={errors.firstname === ''}\n                                        invalid={errors.firstname !== ''}\n                                        onBlur={this.handleBlur('firstname')}\n                                        onChange={this.handleInputChange} />\n                                    <FormFeedback>{errors.firstname}</FormFeedback>\n                                </Col>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\n                                <Col md={10}>\n                                <Input type=\"text\" id=\"lastname\" name=\"lastname\"\n                                        placeholder=\"Last Name\"\n                                        value={this.state.lastname}\n                                        valid={errors.lastname === ''}\n                                        invalid={errors.lastname !== ''}\n                                        onBlur={this.handleBlur('lastname')}\n                                        onChange={this.handleInputChange} />\n                                    <FormFeedback>{errors.lastname}</FormFeedback>\n                                </Col>                        \n                            </FormGroup>\n                            <FormGroup row>\n                            <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\n                                <Col md={10}>\n                                <Input type=\"tel\" id=\"telnum\" name=\"telnum\"\n                                        placeholder=\"Tel. Number\"\n                                        value={this.state.telnum}\n                                        valid={errors.telnum === ''}\n                                        invalid={errors.telnum !== ''}\n                                        onBlur={this.handleBlur('telnum')}\n                                        onChange={this.handleInputChange} />\n                                    <FormFeedback>{errors.telnum}</FormFeedback>\n                                </Col>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\n                                <Col md={10}>\n                                <Input type=\"email\" id=\"email\" name=\"email\"\n                                        placeholder=\"Email\"\n                                        value={this.state.email}\n                                        valid={errors.email === ''}\n                                        invalid={errors.email !== ''}\n                                        onBlur={this.handleBlur('email')}\n                                        onChange={this.handleInputChange} />\n                                    <FormFeedback>{errors.email}</FormFeedback>\n                                </Col>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Col md={{size: 6, offset: 2}}>\n                                    <FormGroup check>\n                                        <Label check>\n                                            <Input type=\"checkbox\"\n                                                name=\"agree\"\n                                                checked={this.state.agree}\n                                                onChange={this.handleInputChange} /> {' '}\n                                            <strong>May we contact you?</strong>\n                                        </Label>\n                                    </FormGroup>\n                                    </Col>\n                                <Col md={{size: 3, offset: 1}}>\n                                    <Input type=\"select\" name=\"contactType\"\n                                            value={this.state.contactType}\n                                            onChange={this.handleInputChange}>\n                                        <option>Tel.</option>\n                                        <option>Email</option>\n                                    </Input>\n                                </Col>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\n                                <Col md={10}>\n                                    <Input type=\"textarea\" id=\"message\" name=\"message\"\n                                        rows=\"12\"\n                                        value={this.state.message}\n                                        onChange={this.handleInputChange}></Input>\n                                </Col>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Col md={{size: 10, offset: 2}}>\n                                    <Button type=\"submit\" color=\"primary\">\n                                        Send Feedback\n                                    </Button>\n                                </Col>\n                            </FormGroup>\n                        </Form>\n                    </div>\n               </div>\n        </div>\n    );\n}}\n\nexport default Contact;","/home/elie/Desktop/Coursera Courses/Coursera-React-Redux/confusion/src/components/AboutComponent.js",[],["90","91"],"/home/elie/Desktop/Coursera Courses/Coursera-React-Redux/confusion/src/shared/leaders.js",[],"/home/elie/Desktop/Coursera Courses/Coursera-React-Redux/confusion/src/redux/configureStore.js",[],"/home/elie/Desktop/Coursera Courses/Coursera-React-Redux/confusion/src/redux/reducer.js",[],{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"92","replacedBy":"96"},{"ruleId":"94","replacedBy":"97"},{"ruleId":"92","replacedBy":"98"},{"ruleId":"94","replacedBy":"99"},{"ruleId":"92","replacedBy":"100"},{"ruleId":"94","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":1,"column":17,"nodeType":"104","messageId":"105","endLine":1,"endColumn":26},{"ruleId":"92","replacedBy":"106"},{"ruleId":"94","replacedBy":"107"},{"ruleId":"102","severity":1,"message":"108","line":3,"column":57,"nodeType":"104","messageId":"105","endLine":3,"endColumn":60},{"ruleId":"109","severity":1,"message":"110","line":117,"column":25,"nodeType":"111","endLine":117,"endColumn":67},{"ruleId":"92","replacedBy":"112"},{"ruleId":"94","replacedBy":"113"},"no-native-reassign",["114"],"no-negated-in-lhs",["115"],["114"],["115"],["114"],["115"],["114"],["115"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar",["114"],["115"],"'Row' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["114"],["115"],"no-global-assign","no-unsafe-negation"]